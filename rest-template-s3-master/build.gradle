plugins
{
    id 'application'
    id "com.moowork.node" version "1.3.1"
}

sourceCompatibility = 1.8
targetCompatibility = 1.8
//version '1.0-SNAPSHOT'

node {
    download = true
}

repositories
{
    mavenCentral()
}

application
{
    mainClassName 'org.demo.Main'
}

task appNpmBuild(type: NpmTask) {
 args = ["run", "build"]
}

jar {

//    dependsOn(build)

    zip64 = true
    manifest {
        attributes 'Main-Class': application.mainClassName
    }

    from('src/main/webapp/ui') {
        into('src/main/java/resources')
    }
}

processResources {
    from ('src/main/java/resources/build') {
        into 'public'
    }
}

sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integration-test/java')
        }
        resources.srcDir file('src/integration-test/resources')
    }
}

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}

dependencies
{
    /*  Jersey for the service
       We use the latest 2.x release because 2.x releases implement JAX-RS 2.1 API.
       We do NOT use a Jersey 3.x release because 3.x releases implement Jakarta RESTful WebServices 3.0 API.
   */
    implementation group: 'org.glassfish.jersey.bundles', name: 'jaxrs-ri', version: '2.+'
    implementation group: 'org.glassfish.jersey.containers', name: 'jersey-container-servlet', version: '2.+'
    // https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api
    compile group: 'javax.servlet', name: 'javax.servlet-api', version: '4.0.1'
    // https://mvnrepository.com/artifact/javax.xml.bind/jaxb-api
    implementation group: 'javax.xml.bind', name: 'jaxb-api', version: '2.+'
    // https://mvnrepository.com/artifact/org.glassfish.jaxb/jaxb-runtime
    implementation group: 'org.glassfish.jaxb', name: 'jaxb-runtime', version: '2.+'

    // Grizzly will host the service
    implementation group: 'org.glassfish.jersey.containers', name: 'jersey-container-grizzly2-http', version: '2.+'

    // Logging
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '2.+'
    implementation group: 'org.slf4j', name: 'slf4j-simple', version: '2.+'
    implementation 'org.junit.jupiter:junit-jupiter:5.4.2'
    implementation 'junit:junit:4.12'
    implementation 'org.mockito:mockito-android:3.6.0'

    // Extras & Utils
    // https://mvnrepository.com/artifact/mysql/mysql-connector-java
    compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.21'
    // https://mvnrepository.com/artifact/com.sun.mail/javax.mail
    compile group: 'com.sun.mail', name: 'javax.mail', version: '1.6.2'
    // compile group: 'org.apache.tomcat', name: 'tomcat-servlet-api', version: '8.0.12'

    // Tests
    testCompile group: 'junit', name: 'junit', version: '4.12'
    integrationTestCompile group: 'org.junit.jupiter', name: 'junit-jupiter', version: '5.4.2'
}

test
{
    useJUnitPlatform()
    testLogging
    {
        events "passed", "skipped", "failed"
    }
}

task integrationTest(type: Test) {
    description = 'Runs the integration tests.'
    group = 'verification'
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
}

check.dependsOn integrationTest
integrationTest.mustRunAfter test